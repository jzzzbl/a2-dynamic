import * as React from 'react';
import { ViewStyle, StyleProp } from 'react-native';
import Reanimated from 'react-native-reanimated';
export declare type Props = {
    diameter: number;
    width: number;
    arcSweepAngle: number | Reanimated.Node<number>;
    rotation: number | Reanimated.Node<number>;
    color: string | Reanimated.Node<number>;
    lineCap: 'round' | 'butt' | 'square';
    hideSmallAngle: boolean;
    style?: StyleProp<ViewStyle>;
};
export declare const defaultProps: {
    color: string;
    rotation: number;
    lineCap: string;
    arcSweepAngle: number;
    hideSmallAngle: boolean;
};
export default class AnimatedArc extends React.PureComponent<Props> {
    static defaultProps: {
        color: string;
        rotation: number;
        lineCap: string;
        arcSweepAngle: number;
        hideSmallAngle: boolean;
    };
    animatedString(strings: TemplateStringsArray, ...values: Array<number | string | Reanimated.Node<string | number>>): any;
    polarToCartesian(centerX: number, centerY: number, radius: number, angleInDegrees: number | Reanimated.Node<number>): {
        x: Reanimated.Node<number>;
        y: Reanimated.Node<number>;
    };
    getCirclePath(x: number, y: number, radius: number, startAngle: number, endAngle: number | Reanimated.Node<number>): Reanimated.Node<any>;
    outerRadius: number;
    innerRadius: number;
    arcEndPosition: {
        x: Reanimated.Node<number>;
        y: Reanimated.Node<number>;
    };
    circlePath: Reanimated.Node<any>;
    rotation: Reanimated.Node<string>;
    render(): JSX.Element;
}
